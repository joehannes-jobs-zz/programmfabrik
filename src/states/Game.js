var Game;

export default Game = class Game extends Phaser.State {
  create() {
    var bogus, data, field, hogus, range;
    range = [1, 2, 3, 4, 5, 6, 7, 8, 9];
    field = 0;
    data = (function() {
      var results;
      results = [];
      for (hogus in range) {
        results.push((function() {
          var results1;
          results1 = [];
          for (bogus in range) {
            if ((2 < hogus && hogus < 6) && (2 < bogus && bogus < 6)) {
              results1.push(field++);
            } else {
              results1.push(this.rnd.between(9, 35).toString());
            }
          }
          return results1;
        }).call(this));
      }
      return results;
    }).call(this);
    data.map((el, i, arr) => {
      return el.join(',');
    });
    data = data.join('\n');
    this.cache.addTilemap('dynamicMap', null, data, Phaser.Tilemap.CSV);
    this.t3Board = this.add.tilemap('dynamicMap', 64, 64);
    this.t3Board.addTilesetImage('tilemap', 'tilemap', 64, 64);
    this.boardLayer = this.t3Board.createLayer(0);
    this.physics.startSystem(Phaser.Physics.ARCADE);
    return this.cursors = this.input.keyboard.createCursorKeys();
  }

  update() {
    if (this.cursors.left.isDown) {
      game.camera.x--;
    }
    if (this.cursors.right.isDown) {
      game.camera.x++;
    }
    if (this.cursors.up.isDown) {
      game.camera.y--;
    }
    if (this.cursors.down.isDown) {
      return game.camer.y++;
    }
  }

};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRlcy9HYW1lLmxpdGNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQyxJQUFBOztBQUFBLE9BQUEsUUFBcUIsT0FBTixNQUFBLEtBQUEsUUFBbUIsTUFBTSxDQUFDLE1BQTFCO0VBQ2QsTUFBUSxDQUFBLENBQUE7QUFDUCxRQUFBO0lBQUEsS0FBQSxHQUFRO0lBQ1IsS0FBQSxHQUFRO0lBQ1IsSUFBQTs7QUFBTztXQUFBLGNBQUE7OztBQUNOO2VBQUEsY0FBQTtZQUNDLElBQUcsQ0FBQSxDQUFBLEdBQUksS0FBSixJQUFJLEtBQUosR0FBWSxDQUFaLENBQUEsSUFBa0IsQ0FBQSxDQUFBLEdBQUksS0FBSixJQUFJLEtBQUosR0FBWSxDQUFaLENBQXJCOzRCQUF3QyxLQUFBLElBQXhDO2FBQUEsTUFBQTs0QkFDSyxJQUFDLENBQUEsR0FBRyxDQUFDLE9BQUwsQ0FBYSxDQUFiLEVBQWdCLEVBQWhCLENBQW1CLENBQUMsUUFBcEIsQ0FBQSxHQURMOztBQUREOzs7QUFETTs7O0lBSVAsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFDLEVBQUQsRUFBSyxDQUFMLEVBQVEsR0FBUixDQUFBLEdBQUE7YUFBZ0IsRUFBRSxDQUFDLElBQUgsQ0FBUSxHQUFSO0lBQWhCLENBQVQ7SUFDQSxJQUFBLEdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWO0lBRVAsSUFBQyxDQUFBLEtBQUssQ0FBQyxVQUFQLENBQWtCLFlBQWxCLEVBQWdDLElBQWhDLEVBQXNDLElBQXRDLEVBQTRDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBM0Q7SUFFQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxHQUFHLENBQUMsT0FBTCxDQUFhLFlBQWIsRUFBMkIsRUFBM0IsRUFBK0IsRUFBL0I7SUFDWCxJQUFDLENBQUEsT0FBTyxDQUFDLGVBQVQsQ0FBeUIsU0FBekIsRUFBb0MsU0FBcEMsRUFBK0MsRUFBL0MsRUFBbUQsRUFBbkQ7SUFFQSxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxPQUFPLENBQUMsV0FBVCxDQUFxQixDQUFyQjtJQUVkLElBQUMsQ0FBQSxPQUFPLENBQUMsV0FBVCxDQUFxQixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQXBDO1dBRUEsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFDLENBQUEsS0FBSyxDQUFDLFFBQVEsQ0FBQyxnQkFBaEIsQ0FBQTtFQW5CSjs7RUFxQlIsTUFBUSxDQUFBLENBQUE7SUFDUCxJQUFHLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQWpCO01BQTZCLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBWixHQUE3Qjs7SUFDQSxJQUFHLElBQUMsQ0FBQSxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQWxCO01BQThCLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBWixHQUE5Qjs7SUFDQSxJQUFHLElBQUMsQ0FBQSxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQWY7TUFBMkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFaLEdBQTNCOztJQUNBLElBQUcsSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBakI7YUFBNkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFYLEdBQTdCOztFQUpPOztBQXRCTSIsImZpbGUiOiJzdGF0ZXMvR2FtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIk1haW4gR2FtZSBTdGF0ZVxuXG5cdGV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUgZXh0ZW5kcyBQaGFzZXIuU3RhdGVcblx0XHRjcmVhdGU6ICgpIC0+XG5cdFx0XHRyYW5nZSA9IFsxLi45XVxuXHRcdFx0ZmllbGQgPSAwXG5cdFx0XHRkYXRhID0gZm9yIGhvZ3VzIG9mIHJhbmdlXG5cdFx0XHRcdGZvciBib2d1cyBvZiByYW5nZVxuXHRcdFx0XHRcdGlmIDIgPCBob2d1cyA8IDYgYW5kIDIgPCBib2d1cyA8IDYgdGhlbiBmaWVsZCsrXG5cdFx0XHRcdFx0ZWxzZSBAcm5kLmJldHdlZW4oOSwgMzUpLnRvU3RyaW5nKClcblx0XHRcdGRhdGEubWFwIChlbCwgaSwgYXJyKSA9PiBlbC5qb2luICcsJ1xuXHRcdFx0ZGF0YSA9IGRhdGEuam9pbiAnXFxuJ1xuXG5cdFx0XHRAY2FjaGUuYWRkVGlsZW1hcCAnZHluYW1pY01hcCcsIG51bGwsIGRhdGEsIFBoYXNlci5UaWxlbWFwLkNTVlxuXG5cdFx0XHRAdDNCb2FyZCA9IEBhZGQudGlsZW1hcCAnZHluYW1pY01hcCcsIDY0LCA2NFxuXHRcdFx0QHQzQm9hcmQuYWRkVGlsZXNldEltYWdlICd0aWxlbWFwJywgJ3RpbGVtYXAnLCA2NCwgNjRcblxuXHRcdFx0QGJvYXJkTGF5ZXIgPSBAdDNCb2FyZC5jcmVhdGVMYXllciAwXG5cdFx0XHQjQGJvYXJkTGF5ZXIucmVzaXplV29ybGQoKVxuXHRcdFx0QHBoeXNpY3Muc3RhcnRTeXN0ZW0gUGhhc2VyLlBoeXNpY3MuQVJDQURFXG5cblx0XHRcdEBjdXJzb3JzID0gQGlucHV0LmtleWJvYXJkLmNyZWF0ZUN1cnNvcktleXMoKVxuXG5cdFx0dXBkYXRlOiAoKSAtPlxuXHRcdFx0aWYgQGN1cnNvcnMubGVmdC5pc0Rvd24gdGhlbiBnYW1lLmNhbWVyYS54LS1cblx0XHRcdGlmIEBjdXJzb3JzLnJpZ2h0LmlzRG93biB0aGVuIGdhbWUuY2FtZXJhLngrK1xuXHRcdFx0aWYgQGN1cnNvcnMudXAuaXNEb3duIHRoZW4gZ2FtZS5jYW1lcmEueS0tXG5cdFx0XHRpZiBAY3Vyc29ycy5kb3duLmlzRG93biB0aGVuIGdhbWUuY2FtZXIueSsrXG4iXX0=
