var Game;

export default Game = class Game extends Phaser.State {
  create() {
    var bogus, data, field, hogus, range;
    range = [1, 2, 3, 4, 5, 6, 7, 8, 9];
    field = 0;
    data = (function() {
      var results;
      results = [];
      for (hogus in range) {
        results.push((function() {
          var results1;
          results1 = [];
          for (bogus in range) {
            if ((2 < hogus && hogus < 6) && (2 < bogus && bogus < 6)) {
              results1.push(field++);
            } else {
              results1.push(this.rnd.between(9, 35).toString());
            }
          }
          return results1;
        }).call(this));
      }
      return results;
    }).call(this);
    data.map((el, i, arr) => {
      return el.join(',');
    });
    data = data.join('\n');
    this.cache.addTilemap('dynamicMap', null, data, Phaser.Tilemap.CSV);
    this.t3Board = this.add.tilemap('dynamicMap', 64, 64);
    this.t3Board.addTilesetImage('tilemap', 'tilemap', 64, 64);
    this.boardLayer = this.t3Board.createLayer(0);
    this.boardLayer.resizeWorld();
    this.physics.startSystem(Phaser.Physics.ARCADE);
    return this.cursors = this.input.keyboard.createCursorKeys();
  }

  update() {
    if (this.cursors.left.isDown) {
      this.camera.x--;
    }
    if (this.cursors.right.isDown) {
      this.camera.x++;
    }
    if (this.cursors.up.isDown) {
      this.camera.y--;
    }
    if (this.cursors.down.isDown) {
      return this.camera.y++;
    }
  }

};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRlcy9HYW1lLmxpdGNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQyxJQUFBOztBQUFBLE9BQUEsUUFBcUIsT0FBTixNQUFBLEtBQUEsUUFBbUIsTUFBTSxDQUFDLE1BQTFCO0VBQ2QsTUFBUSxDQUFBLENBQUE7QUFDUCxRQUFBO0lBQUEsS0FBQSxHQUFRO0lBQ1IsS0FBQSxHQUFRO0lBQ1IsSUFBQTs7QUFBTztXQUFBLGNBQUE7OztBQUNOO2VBQUEsY0FBQTtZQUNDLElBQUcsQ0FBQSxDQUFBLEdBQUksS0FBSixJQUFJLEtBQUosR0FBWSxDQUFaLENBQUEsSUFBa0IsQ0FBQSxDQUFBLEdBQUksS0FBSixJQUFJLEtBQUosR0FBWSxDQUFaLENBQXJCOzRCQUF3QyxLQUFBLElBQXhDO2FBQUEsTUFBQTs0QkFDSyxJQUFDLENBQUEsR0FBRyxDQUFDLE9BQUwsQ0FBYSxDQUFiLEVBQWdCLEVBQWhCLENBQW1CLENBQUMsUUFBcEIsQ0FBQSxHQURMOztBQUREOzs7QUFETTs7O0lBSVAsSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFDLEVBQUQsRUFBSyxDQUFMLEVBQVEsR0FBUixDQUFBLEdBQUE7YUFBZ0IsRUFBRSxDQUFDLElBQUgsQ0FBUSxHQUFSO0lBQWhCLENBQVQ7SUFDQSxJQUFBLEdBQU8sSUFBSSxDQUFDLElBQUwsQ0FBVSxJQUFWO0lBRVAsSUFBQyxDQUFBLEtBQUssQ0FBQyxVQUFQLENBQWtCLFlBQWxCLEVBQWdDLElBQWhDLEVBQXNDLElBQXRDLEVBQTRDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBM0Q7SUFFQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxHQUFHLENBQUMsT0FBTCxDQUFhLFlBQWIsRUFBMkIsRUFBM0IsRUFBK0IsRUFBL0I7SUFDWCxJQUFDLENBQUEsT0FBTyxDQUFDLGVBQVQsQ0FBeUIsU0FBekIsRUFBb0MsU0FBcEMsRUFBK0MsRUFBL0MsRUFBbUQsRUFBbkQ7SUFFQSxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxPQUFPLENBQUMsV0FBVCxDQUFxQixDQUFyQjtJQUNkLElBQUMsQ0FBQSxVQUFVLENBQUMsV0FBWixDQUFBO0lBQ0EsSUFBQyxDQUFBLE9BQU8sQ0FBQyxXQUFULENBQXFCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBcEM7V0FFQSxJQUFDLENBQUEsT0FBRCxHQUFXLElBQUMsQ0FBQSxLQUFLLENBQUMsUUFBUSxDQUFDLGdCQUFoQixDQUFBO0VBbkJKOztFQXFCUixNQUFRLENBQUEsQ0FBQTtJQUNQLElBQUcsSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBakI7TUFBNkIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxDQUFSLEdBQTdCOztJQUNBLElBQUcsSUFBQyxDQUFBLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBbEI7TUFBOEIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxDQUFSLEdBQTlCOztJQUNBLElBQUcsSUFBQyxDQUFBLE9BQU8sQ0FBQyxFQUFFLENBQUMsTUFBZjtNQUEyQixJQUFDLENBQUEsTUFBTSxDQUFDLENBQVIsR0FBM0I7O0lBQ0EsSUFBRyxJQUFDLENBQUEsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFqQjthQUE2QixJQUFDLENBQUEsTUFBTSxDQUFDLENBQVIsR0FBN0I7O0VBSk87O0FBdEJNIiwiZmlsZSI6InN0YXRlcy9HYW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiTWFpbiBHYW1lIFN0YXRlXG5cblx0ZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZSBleHRlbmRzIFBoYXNlci5TdGF0ZVxuXHRcdGNyZWF0ZTogKCkgLT5cblx0XHRcdHJhbmdlID0gWzEuLjldXG5cdFx0XHRmaWVsZCA9IDBcblx0XHRcdGRhdGEgPSBmb3IgaG9ndXMgb2YgcmFuZ2Vcblx0XHRcdFx0Zm9yIGJvZ3VzIG9mIHJhbmdlXG5cdFx0XHRcdFx0aWYgMiA8IGhvZ3VzIDwgNiBhbmQgMiA8IGJvZ3VzIDwgNiB0aGVuIGZpZWxkKytcblx0XHRcdFx0XHRlbHNlIEBybmQuYmV0d2Vlbig5LCAzNSkudG9TdHJpbmcoKVxuXHRcdFx0ZGF0YS5tYXAgKGVsLCBpLCBhcnIpID0+IGVsLmpvaW4gJywnXG5cdFx0XHRkYXRhID0gZGF0YS5qb2luICdcXG4nXG5cblx0XHRcdEBjYWNoZS5hZGRUaWxlbWFwICdkeW5hbWljTWFwJywgbnVsbCwgZGF0YSwgUGhhc2VyLlRpbGVtYXAuQ1NWXG5cblx0XHRcdEB0M0JvYXJkID0gQGFkZC50aWxlbWFwICdkeW5hbWljTWFwJywgNjQsIDY0XG5cdFx0XHRAdDNCb2FyZC5hZGRUaWxlc2V0SW1hZ2UgJ3RpbGVtYXAnLCAndGlsZW1hcCcsIDY0LCA2NFxuXG5cdFx0XHRAYm9hcmRMYXllciA9IEB0M0JvYXJkLmNyZWF0ZUxheWVyIDBcblx0XHRcdEBib2FyZExheWVyLnJlc2l6ZVdvcmxkKClcblx0XHRcdEBwaHlzaWNzLnN0YXJ0U3lzdGVtIFBoYXNlci5QaHlzaWNzLkFSQ0FERVxuXG5cdFx0XHRAY3Vyc29ycyA9IEBpbnB1dC5rZXlib2FyZC5jcmVhdGVDdXJzb3JLZXlzKClcblxuXHRcdHVwZGF0ZTogKCkgLT5cblx0XHRcdGlmIEBjdXJzb3JzLmxlZnQuaXNEb3duIHRoZW4gQGNhbWVyYS54LS1cblx0XHRcdGlmIEBjdXJzb3JzLnJpZ2h0LmlzRG93biB0aGVuIEBjYW1lcmEueCsrXG5cdFx0XHRpZiBAY3Vyc29ycy51cC5pc0Rvd24gdGhlbiBAY2FtZXJhLnktLVxuXHRcdFx0aWYgQGN1cnNvcnMuZG93bi5pc0Rvd24gdGhlbiBAY2FtZXJhLnkrK1xuIl19
